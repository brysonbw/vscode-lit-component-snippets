{
"Lit Web Component with JSDoc": {
  "prefix": "litwcjsdoc",
  "body": [
    "import { LitElement, css, html } from 'lit';",
    "",
    "/**",
    " * ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}} element",
    " */",
    "export class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}} extends LitElement {",
    "  static properties = {",
    "    ${3:name}: { ${4:type: String} },",
    "  };",
    "",
    "  constructor() {",
    "    super();",
    "    /**",
    "     * ${5:Property data for ${2:${TM_FILENAME_BASE/[^a-z-]//gi}}}",
    "     * @type {${6:string}}",
    "     */",
    "    this.${3:name} = '${7:${TM_FILENAME_BASE/[^a-z-]//gi}}';",
    "  }",
    "",
    "  /**",
    "   * @returns {${8:import('lit').TemplateResult}}",
    "   */",
    "  render() {",
    "    return html`<${9:div}>${this.${3:this.name}} works!$0</${9:div}>`;",
    "  }",
    "",
    "  static styles = css`",
    "    :host {",
    "      ${10:color: #1e90ff;}",
    "    }",
    "  `;",
    "}",
    "",
    "customElements.define('${2:${TM_FILENAME_BASE/[^a-z-]//gi}}', ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}});",
    ""
  ],
  "description": "Lit Web Component in JavaScript with JSDoc Annotations"
 },
 "Lit Web Component Lifecycle: connectedCallback() with JSDoc": {
  "prefix": "litwcjsdoclccc",
  "body": [
    "/**",
    " * ${1:Invoked when the component is added to the document's DOM}",
    " * @returns {void}",
    " */",
    "connectedCallback() {",
    "  ${2:super.connectedCallback();}",
    "  ${3:window.addEventListener('${4:keydown}', this.${5:_handleKeydown});}$0",
    "}"
  ],
  "description": "Lit Web Component Lifecycle: connectedCallback() in JavaScript with JSDoc Annotations"
 },
  "Lit Web Component Lifecycle: disconnectedCallback() with JSDoc": {
  "prefix": "litwcjsdoclcdc",
  "body": [
    "/**",
    " * ${1:Invoked when a component is removed from the document's DOM}",
    " * @returns {void}",
    " */",
    "disconnectedCallback() {",
    "  ${2:super.disconnectedCallback();}",
    "  ${3:window.removeEventListener('${4:keydown}', this.${5:_handleKeydown});}$0",
    "}"
  ],
  "description": "Lit Web Component Lifecycle: disconnectedCallback() in JavaScript with JSDoc Annotations"
 },
 "Lit Web Component Lifecycle: firstUpdated() with JSDoc": {
  "prefix": "litwcjsdoclcfu",
  "body": [
    "/**",
    " * ${1:Invoked after the component's DOM has been updated the first time, immediately before updated()}",
    " * @returns {${2:void}}",
    " */",
    "firstUpdated() {",
    "  ${3:console.log('firstUpdated() invoked!');}$0",
    "}"
  ],
  "description": "Lit Web Component Lifecycle: firstUpdated() in JavaScript with JSDoc Annotations"
 },
 "Lit Web Component Lifecycle: updated() with JSDoc": {
  "prefix": "litwcjsdoclcu",
  "body": [
    "/**",
    " * ${1:Invoked whenever the componentâ€™s update finishes and the element's DOM has been updated and rendered}",
    " * @param {Map<${2:string}, ${3:unknown}>} changedProperties",
    " * @returns {void}",
    " */",
    "updated(changedProperties) {",
    "  ${4:console.log('updated() invoked!', changedProperties);}$0",
    "}"
  ],
  "description": "Lit Web Component Lifecycle: updated() in JavaScript with JSDoc Annotations"
 },
 "Lit Web Component Lifecycle: render() with JSDoc": {
  "prefix": "litwcjsdoclcr",
  "body": [
    "/**",
    " * ${1:Renders the component's DOM}",
    " * @returns {${2:import('lit').TemplateResult}}",
    " */",
    "render() {",
    "  return html`<${3:div}>${4:${TM_FILENAME_BASE/[^a-z-]//gi} works!}</${3:div}>`;$0",
    "}",
    ""
  ],
  "description": "Lit Web Component Lifecycle: render() in JavaScript with JSDoc Annotations"
 },
 "Lit Web Component Getter with JSDoc": {
  "prefix": "litwcjsdocgetter",
  "body": [
    "/**",
    " * ${2:Get 'my-element'}",
    " * @returns {${3:HTMLElement | null}}",
    " * ${4:@private}",
    " */",
    "get ${1:_myElement}() {",
    "  return ${5:this.renderRoot.${6:querySelector}('$0')};",
    "}"
  ],
  "description": "Lit Web Component Getter in JavaScript with JSDoc Annotations"
 },
 "Lit Web Component Method with JSDoc": {
  "prefix": "litwcjsdocmethod",
  "body": [
    "/**",
    " * ${2:Handles an action onClick}",
    " * @param {${3:Event}} ${4:event} - ${5:An event which takes place on an EventTarget}",
    " * @returns {${6:void}}",
    " * ${7:@private}",
    " */",
    "${1:_onClick}(${4:event}) {",
    "  console.log('${1:_onClick} invoked!', ${4:event});$0",
    "}"
  ],
  "description": "Lit Web Component Method in JavaScript with JSDoc Annotations"
 },
 "JSDoc TypeDef Object": {
  "prefix": "jsdoctdobj",
  "body": [
    "/**",
    " * @typedef {${1:object}} ${2:UserType}",
    " * @property {${3:string}} ${4:Id}$0",
    " */"
  ],
  "description": "JSDoc TypeDef Object"
 },
 "JSDoc TypeDef": {
  "prefix": "jsdoctd",
  "body": [
    "/** @typedef {${1:string}} ${2:CustomType} */"
  ],
  "description": "JSDoc TypeDef"
 },
 "JSDoc Type With Description": {
  "prefix": "jsdoctypewdesc",
  "body": [
    "/**",
    " * ${1:Data type: string}",
    " * @type {${2:string}}",
    " */"
  ],
  "description": "JSDoc Type With Description"
 },
 "JSDoc Type": {
  "prefix": "jsdoctype",
  "body": [
    "/** @type {${1:string}} */"
  ],
  "description": "JSDoc Type"
 }
}